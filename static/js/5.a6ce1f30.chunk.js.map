{"version":3,"sources":["components/Stars/Stars.tsx"],"names":["connect","state","isFetching","static","stars","getStarsData","useEffect","className","map","star","path","img","nameClass","title","desc","fact"],"mappings":"8HAAA,yDAqDeA,uBAPO,SAACC,GACnB,MAAO,CACHC,WAAYD,EAAME,OAAOD,WACzBE,MAAOH,EAAME,OAAOC,SAIY,CACpCC,kBADWL,EAlCoB,SAAC,GAAuC,IAAtCK,EAAqC,EAArCA,aAAcH,EAAuB,EAAvBA,WAAYE,EAAW,EAAXA,MAM3D,OAJAE,qBAAU,WACND,MACD,IAGC,sBAAKE,UAAU,UAAf,UACI,yIACCL,EAAa,cAAC,IAAD,IACV,qBAAKK,UAAU,sBAAf,SACKH,EAAOA,EAAMI,KAAI,SAAAC,GACd,OACI,sBAAKF,UAAU,qBAAf,UACI,cAAC,IAAD,CAAKG,KAAMD,EAAKE,IAAKC,UAAW,6BAChC,6BAAKH,EAAKI,QACV,4BAAIJ,EAAKK,OACT,+BAAOL,EAAKM,aAGnB","file":"static/js/5.a6ce1f30.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport Img from '../commons/Img'\r\nimport {AppStateType} from '../../redux/redux'\r\nimport {connect} from 'react-redux'\r\nimport {getStarsData} from '../../redux/staticReducer'\r\nimport {StarsType} from '../../api/apiStatic'\r\nimport Preloader from '../commons/Preloader'\r\n\r\ntype MapStatePropsType = {\r\n    isFetching: boolean,\r\n    stars: Array<StarsType> | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getStarsData: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nconst Stars: React.FC<PropsType> = ({getStarsData, isFetching, stars}) => {\r\n\r\n    useEffect(() => {\r\n        getStarsData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h1>Известные личности</h1>\r\n            {isFetching ? <Preloader/> :\r\n                <div className=\"main__wrapper-items\">\r\n                    {stars? stars.map(star => {\r\n                        return (\r\n                            <div className=\"main__wrapper-item\">\r\n                                <Img path={star.img} nameClass={'main__wrapper-item-photo'} />\r\n                                <h3>{star.title}</h3>\r\n                                <p>{star.desc}</p>\r\n                                <span>{star.fact}</span>\r\n                            </div>\r\n                        )\r\n                    }) : null}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isFetching: state.static.isFetching,\r\n        stars: state.static.stars,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getStarsData\r\n})(Stars)\r\n"],"sourceRoot":""}